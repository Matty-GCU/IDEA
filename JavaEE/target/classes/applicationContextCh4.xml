<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 定义目标对象（借用4.2.1节的实现类） -->
    <bean id="testDao" class="textbook.chapter04.dynamic.proxy.jdk.DaoImpl"/>
    <!-- 创建一个切面 -->
    <bean id="myAspect02" class="textbook.chapter04.aop.MyAspect02"/>
    <!-- 使用Spring代理工厂定义一个名为testDaoProxy的代理对象 -->
    <bean id="testDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!-- 指定该代理对象实现的接口 -->
        <property name="proxyInterfaces" value="textbook.chapter04.dynamic.proxy.jdk.Dao"/>
        <!-- 指定目标对象 -->
        <property name="target" ref="testDao"/>
        <!-- 指定切面，织入环绕通知 -->
        <property name="interceptorNames" value="myAspect02"/>
        <!-- 指定代理实现方式：默认为false，是JDK动态代理；设置为true，则为CGLIB动态代理 -->
        <property name="proxyTargetClass" value="false"/>
    </bean>

    <!-- 目标对象。还是用4.2.1节的实现类 -->
    <bean id="testDao2" class="textbook.chapter04.dynamic.proxy.jdk.DaoImpl"/>
    <!-- 切面 -->
    <bean id="myAspect03" class="textbook.chapter04.aspectj.xml.MyAspect03"/>
    <!-- AOP配置 -->
    <aop:config>
        <!-- 配置切面 -->
        <aop:aspect ref="myAspect03">
            <!-- 配置切入点，决定通知要增强哪些方法 -->
            <!-- 第一个*表示任意返回类型，第二个*表示任意方法，(..)表示任意方法参数 -->
            <aop:pointcut id="myPointCut" expression="execution(* textbook.chapter04.dynamic.proxy.jdk.DaoImpl.*(..))"/>
<!--            <aop:pointcut id="myPointCut" expression="execution(void textbook.chapter04.dynamic.proxy.jdk.DaoImpl.save())"/>-->

            <!-- 将通知与切入点关联 -->
            <!-- 关联前置通知 -->
            <aop:before method="before" pointcut-ref="myPointCut"/>
            <!-- 关联后置返回通知 -->
            <aop:after-returning method="afterReturning" pointcut-ref="myPointCut"/>
            <!-- 关联环绕通知 -->
            <aop:around method="around" pointcut-ref="myPointCut"/>
            <!-- 关联后置（环绕）通知，不管目标方法是否成功都会执行 -->
            <aop:after method="after" pointcut-ref="myPointCut"/>
            <!-- 关联异常通知，没有异常发生将不会执行增强 -->
            <aop:after-throwing method="except" pointcut-ref="myPointCut" throwing="throwable"/>

        </aop:aspect>
    </aop:config>

    <!-- 指定需要扫描的包，使注解生效 -->
    <context:component-scan base-package="textbook.chapter04.dynamic.proxy.jdk"/>
    <context:component-scan base-package="textbook.chapter04.aspectj.annotation"/>
    <!-- 启动基于注解的AspectJ支持 -->
<!--    <aop:aspectj-autoproxy/>-->

</beans>